name: Deploy PR Preview
on:
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  deploy-preview:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
      issues: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: 'Frontend/package-lock.json'
          
      - name: Install dependencies
        working-directory: ./Frontend
        run: npm ci
        
      - name: Build project
        working-directory: ./Frontend
        run: npm run build
        
      - name: Deploy to Render (Manual Deploy)
        id: deploy
        run: |
          # Create a manual deploy to your existing service with the PR branch
          RESPONSE=$(curl -X POST "https://api.render.com/v1/services/${{ secrets.RENDER_SERVICE_ID }}/deploys" \
            -H "Authorization: Bearer ${{ secrets.RENDER_API_KEY }}" \
            -H "Content-Type: application/json" \
            -d '{
              "clearCache": false,
              "gitCommitSHA": "${{ github.event.pull_request.head.sha }}"
            }')
          
          DEPLOY_ID=$(echo $RESPONSE | jq -r '.id')
          echo "DEPLOY_ID=$DEPLOY_ID" >> $GITHUB_OUTPUT
          
          # Get your service URL
          SERVICE_URL=$(curl -s -X GET "https://api.render.com/v1/services/${{ secrets.RENDER_SERVICE_ID }}" \
            -H "Authorization: Bearer ${{ secrets.RENDER_API_KEY }}" | jq -r '.serviceDetails.url')
          echo "SERVICE_URL=$SERVICE_URL" >> $GITHUB_OUTPUT
          
      - name: Wait for deployment
        run: |
          echo "Waiting for deployment to complete..."
          sleep 60
          
      - name: Comment PR
        if: success()
        run: |
          PREVIEW_URL="${{ steps.deploy.outputs.SERVICE_URL }}"
          
          if [ "${{ github.event.pull_request.head.repo.full_name }}" = "${{ github.repository }}" ]; then
            curl -X POST \
              -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
              -H "Accept: application/vnd.github.v3+json" \
              https://api.github.com/repos/${{ github.repository }}/issues/${{ github.event.number }}/comments \
              -d "{\"body\":\"🚀 PR Preview deployed! Check it out at: $PREVIEW_URL\\n\\n⚠️ Note: This temporarily replaces the main site until the next main branch deploy.\"}"
          else
            echo "🚀 PR Preview deployed at: $PREVIEW_URL"
            echo "Preview URL: $PREVIEW_URL" >> $GITHUB_STEP_SUMMARY
          fi
