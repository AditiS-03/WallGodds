name: Deploy PR Preview
on:
  pull_request:
    types: [opened, synchronize, reopened, closed]
  workflow_dispatch:
    inputs:
      pr_number:
        description: 'PR number to deploy'
        required: false
        type: string

jobs:
  deploy-preview:
    if: github.event.action != 'closed' || github.event_name == 'workflow_dispatch'
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
      issues: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Install jq
        run: sudo apt-get update && sudo apt-get install -y jq
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: 'Frontend/package-lock.json'
          
      - name: Install dependencies
        working-directory: ./Frontend
        run: npm ci
        
      - name: Build project
        working-directory: ./Frontend
        run: npm run build
        
      - name: Install Surge CLI
        run: npm install -g surge
        
      - name: Deploy to Surge.sh
        id: deploy
        run: |
          # Handle manual dispatch vs PR event
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            if [ -n "${{ github.event.inputs.pr_number }}" ]; then
              PR_NUMBER="${{ github.event.inputs.pr_number }}"
            else
              echo "Error: PR number required for manual dispatch"
              exit 1
            fi
          else
            PR_NUMBER="${{ github.event.number }}"
          fi
          
          DOMAIN="wallgodds-pr-$PR_NUMBER.surge.sh"
          
          echo "Deploying to Surge domain: $DOMAIN"
          
          # Deploy to Surge
          cd Frontend/dist
          echo "$DOMAIN" > CNAME
          surge ./ "$DOMAIN" --token "${{ secrets.SURGE_TOKEN }}"
          
          PREVIEW_URL="https://$DOMAIN"
          echo "SERVICE_URL=$PREVIEW_URL" >> $GITHUB_OUTPUT
          echo "PR_NUMBER=$PR_NUMBER" >> $GITHUB_OUTPUT
          
      - name: Wait and verify deployment
        run: |
          PREVIEW_URL="${{ steps.deploy.outputs.SERVICE_URL }}"
          echo "Waiting for deployment to be accessible..."
          sleep 10
          
          # Check if the URL is accessible
          for i in {1..6}; do
            if curl -s --head "$PREVIEW_URL" | head -n 1 | grep -q "200\|301\|302"; then
              echo "✅ Preview site is live at $PREVIEW_URL"
              break
            else
              echo "⏳ Waiting for site to be ready... (attempt $i/6)"
              sleep 10
            fi
          done
          
      - name: Comment on PR
        if: success()
        run: |
          PREVIEW_URL="${{ steps.deploy.outputs.SERVICE_URL }}"
          PR_NUMBER="${{ steps.deploy.outputs.PR_NUMBER }}"
          
          COMMENT_BODY="🚀 **PR Preview Deployed Successfully!**

          📱 **Preview URL:** $PREVIEW_URL
          🌐 **Powered by:** Surge.sh
          🌿 **Branch:** \`${{ github.head_ref || github.ref_name }}\`
          
          This is a separate preview deployment that won't affect the main site.
          
          ---
          ⚡ The preview will be automatically deleted when this PR is closed."
          
          if [ "${{ github.event.pull_request.head.repo.full_name }}" = "${{ github.repository }}" ] || [ -z "${{ github.event.pull_request.head.repo.full_name }}" ]; then
            curl -X POST \
              -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
              -H "Accept: application/vnd.github.v3+json" \
              https://api.github.com/repos/${{ github.repository }}/issues/$PR_NUMBER/comments \
              -d "{\"body\":$(echo "$COMMENT_BODY" | jq -Rs .)}"
          else
            echo "$COMMENT_BODY"
            echo "Preview URL: $PREVIEW_URL" >> $GITHUB_STEP_SUMMARY
          fi

  cleanup-preview:
    if: github.event.action == 'closed'
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
    steps:
      - name: Install Surge CLI
        run: npm install -g surge
        
      - name: Delete Preview Deployment
        run: |
          PR_NUMBER="${{ github.event.number }}"
          DOMAIN="wallgodds-pr-$PR_NUMBER.surge.sh"
          
          echo "Deleting Surge deployment: $DOMAIN"
          
          # Delete the surge deployment
          surge teardown "$DOMAIN" --token "${{ secrets.SURGE_TOKEN }}" || echo "Domain may not exist or already deleted"
          
          echo "✅ Preview deployment cleaned up!"
          
      - name: Comment cleanup completion
        run: |
          COMMENT_BODY="🧹 **Preview Environment Cleaned Up**
          
          The preview deployment for this PR has been automatically deleted.
          
          Thank you for contributing! 🎉"
          
          if [ "${{ github.event.pull_request.head.repo.full_name }}" = "${{ github.repository }}" ]; then
            curl -X POST \
              -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
              -H "Accept: application/vnd.github.v3+json" \
              https://api.github.com/repos/${{ github.repository }}/issues/${{ github.event.number }}/comments \
              -d "{\"body\":$(echo "$COMMENT_BODY" | jq -Rs .)}"
          fi
